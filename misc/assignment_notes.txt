On windows (work PC)

Task 1
Import data (http://www.postgresqltutorial.com/load-postgresql-sample-database/)

1. login as superuser
>psql -d postgres -U postgres

>CREATE DATABASE dvdrental;

3.
>psql -d dvdrental -U nkarag
>grant all privileges on database dvdrental to postgres;


4. use the pg_restore tool to load data into the dvdrental database:

>pg_restore -U postgres -d dvdrental F:\office_backup\backup\mydocuments\jbs\Workable-Lead_Data_Engineer\dvdrental\dvdrental.tar

I got the following errors, but it seems OK

pg_restore: [archiver (db)] Error while PROCESSING TOC:
pg_restore: [archiver (db)] Error from TOC entry 2197; 0 0 COMMENT EXTENSION plpgsql
pg_restore: [archiver (db)] could not execute query: ERROR:  must be owner of extension plpgsql
    Command was: COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


5. Check:


>psql -d dvdrental -U postgres

dvdrental=> select * from actor;
 actor_id | first_name  |  last_name   |      last_update
----------+-------------+--------------+------------------------
        1 | Penelope    | Guiness      | 2013-05-26 14:47:57.62
        2 | Nick        | Wahlberg     | 2013-05-26 14:47:57.62
        3 | Ed          | Chase        | 2013-05-26 14:47:57.62
        4 | Jennifer    | Davis        | 2013-05-26 14:47:57.62
        5 | Johnny      | Lollobrigida | 2013-05-26 14:47:57.62
        6 | Bette       | Nicholson    | 2013-05-26 14:47:57.62
        7 | Grace       | Mostel       | 2013-05-26 14:47:57.62
        8 | Matthew     | Johansson    | 2013-05-26 14:47:57.62
        9 | Joe         | Swank        | 2013-05-26 14:47:57.62
       10 | Christian   | Gable        | 2013-05-26 14:47:57.62
       11 | Zero        | Cage         | 2013-05-26 14:47:57.62
       12 | Karl        | Berry        | 2013-05-26 14:47:57.62
       13 | Uma         | Wood         | 2013-05-26 14:47:57.62
       14 | Vivien      | Bergen       | 2013-05-26 14:47:57.62
       15 | Cuba        | Olivier      | 2013-05-26 14:47:57.62
       16 | Fred        | Costner      | 2013-05-26 14:47:57.62
       17 | Helen       | Voight       | 2013-05-26 14:47:57.62 
       18 | Dan         | Torn         | 2013-05-26 14:47:57.62
       19 | Bob         | Fawcett      | 2013-05-26 14:47:57.62
       20 | Lucille     | Tracy        | 2013-05-26 14:47:57.62
       21 | Kirsten     | Paltrow      | 2013-05-26 14:47:57.62
       22 | Elvis       | Marx         | 2013-05-26 14:47:57.62
       23 | Sandra      | Kilmer       | 2013-05-26 14:47:57.62
       24 | Cameron     | Streep       | 2013-05-26 14:47:57.62
       25 | Kevin       | Bloom        | 2013-05-26 14:47:57.62


##### On Ubuntu
1. Connecting to postgres db as postgres db user
$ su - postgres
$ psql

2. create database dvdrental
postgres=# CREATE DATABASE dvdrental;
CREATE DATABASE

3. restore database (as postgres linux user)
$ su - nikos
$ cp /media/nikos/VERBATIM\ HD/office_backup/backup/mydocuments/jbs/Workable-Lead_Data_Engineer/Task_Assignment/dvdrental/dvdrental.tar /tmp
$ su - postgres
$ pg_restore -U postgres -d dvdrental /tmp/dvdrental.tar

3. Check

$ su - postgres
$ psql -d dvdrental -U postgres

dvdrental=# select * from rental limit 10;
 rental_id |     rental_date     | inventory_id | customer_id |     return_date     | staff_id |     last_update     
-----------+---------------------+--------------+-------------+---------------------+----------+---------------------
         2 | 2005-05-24 22:54:33 |         1525 |         459 | 2005-05-28 19:40:33 |        1 | 2006-02-16 02:30:53
         3 | 2005-05-24 23:03:39 |         1711 |         408 | 2005-06-01 22:12:39 |        1 | 2006-02-16 02:30:53
         4 | 2005-05-24 23:04:41 |         2452 |         333 | 2005-06-03 01:43:41 |        2 | 2006-02-16 02:30:53
         5 | 2005-05-24 23:05:21 |         2079 |         222 | 2005-06-02 04:33:21 |        1 | 2006-02-16 02:30:53
         6 | 2005-05-24 23:08:07 |         2792 |         549 | 2005-05-27 01:32:07 |        1 | 2006-02-16 02:30:53
         7 | 2005-05-24 23:11:53 |         3995 |         269 | 2005-05-29 20:34:53 |        2 | 2006-02-16 02:30:53
         8 | 2005-05-24 23:31:46 |         2346 |         239 | 2005-05-27 23:33:46 |        2 | 2006-02-16 02:30:53
         9 | 2005-05-25 00:00:40 |         2580 |         126 | 2005-05-28 00:22:40 |        1 | 2006-02-16 02:30:53
        10 | 2005-05-25 00:02:21 |         1824 |         399 | 2005-05-31 22:44:21 |        2 | 2006-02-16 02:30:53
        11 | 2005-05-25 00:09:02 |         4443 |         142 | 2005-06-02 20:56:02 |        2 | 2006-02-16 02:30:53
(10 rows)



TASK 2


1. Create moviesdb

(linux)
su - postgres
password: nikos

>psql -d postgres -U postgres
>CREATE DATABASE moviesdb;


(Windows)
>psql -d postgres -U nkarag

>CREATE DATABASE moviesdb;

>grant all privileges on database moviesdb to postgres;


2. create a test_Table

-- Table: public.test_tab

DROP TABLE public.test_tab;

CREATE TABLE public.test_tab
(
    id integer primary key,
    name character varying(50) COLLATE pg_catalog."default",
    mytime time without time zone
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.test_tab
    OWNER to postgres;
